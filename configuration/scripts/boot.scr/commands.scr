# Command 'command_size' calculates file size.
# Next variables must be defined
#     _location_  - absolute file path on device
#     _device_    - device where file is placed
#     _name_      - short file name used for debug messages (optional)
# Next variables will be defined:
#     _size_      - will contain calculated size
#     result      - run command result
# Example:
#     setenv _name_ kernel
#     setenv _device_ ${boot_device}
#     setenv _location_ ${kernel_location}
#     run command_size
#     setenv kernel_size ${_size_}
setenv command_size '
   echo "@TDA: calcilating "${_device_}\${_location_}" (${_name_}) size...";
   if size ${_device_} ${_location_} ; then
      setenv _size_ 0x${filesize};
      setenv errno ${result_true};
      echo "@TDA: ... "${_device_}\${_location_}" (${_name_}) calculated size (${_size_})";
   else;
      echo "@TDA: calculate size error";
      setenv _size_ 0x0;
      setenv errno ${result_false};
      echo "@TDA: ... "${_device_}\${_location_}" (${_name_}) calculate size error";
   fi
'


# Command 'command_size_name' calculates file size.
# Next variables must be defined
#     _device_    - device where file is placed
#     _name_      - short file name used for debug messages and obtaining
#                   absolute file path on device and load address according to convention:
#                       - variable witn name '${_name_}_location' must be defined and contain valid absolute file path on device
# Next variables will be defined:
#     _size_      - will contain calculated size
#     ${_name_}_location - this variable will be defined according to convention and will contain calculated size
#     result      - run command result
# Example:
#     setenv ${kernel_location} /boot/kernel
#
#     setenv _name_ kernel
#     setenv _device_ ${boot_device}
#     run command_size_name
setenv command_size_name '
   env indirect _location_ ${_name_}_location;
   run command_size;
   env indirect ${_name_}_size _size_;
'



# Command 'command_size_names' calculates files sizes.
# Next variables must be defined
#     _device_    - device where file is placed
#     _names_     - short file names list used for calling 'command_load_name'
# Next variables will be defined:
#     result      - run command result
#     ${_name_}_location - list of variables will be defined according to convention and will contain calculated sizes
# Example:
#     setenv kernel_location /boot/kernel
#     setenv ramdisk_location /boot/ramdisk
#     setenv fdt_location /boot/fdt
#
#     setenv _names_ kernel ramdisk fdt
#     setenv _device_ ${boot_device}
#     run command_size_names
setenv command_size_names '
   for tmp_name in ${_names_}; do
      setenv _name_ ${tmp_name};
      run command_size_name;
   done
'



# Command 'command_load' loads file to RAM.
# Next variables must be defined
#     _location_  - absolute file path on device
#     _device_    - device where file is placed
#     _address_   - RAM address where file will be loaded 
#     _name_      - short file name used for debug messages (optional)
# Next variables will be defined:
#     result      - run command result
# Example:
#     setenv _name_ kernel
#     setenv _device_ ${boot_device}
#     setenv _location_ ${kernel_location}
#     setenv _address_ ${kernel_address}
#     run command_load
setenv command_load '
   echo "@TDA: loading "${_device_}\${_location_}" (${_name_}) to ${_address_}...";
   if load ${_device_} ${_address_} ${_location_} ; then
      setenv result ${result_true};
      echo "@TDA: ... "${_device_}\${_location_}" (${_name_}) loaded";
   else;
      setenv result ${result_false};
      echo "@TDA: ... "${_device_}\${_location_}" (${_name_}) load error";
   fi
'



# Command 'command_load_name' loads file to RAM.
# Next variables must be defined
#     _device_    - device where file is placed
#     _name_      - short file name used for debug messages and obtaining
#                   absolute file path on device and load address according to convention:
#                       - variable witn name '${_name_}_location' must be defined and contain valid absolute file path on device
#                       - variable witn name '${_name_}_address' must be defined and contain valid RAM address to be loaded
# Next variables will be defined:
#     result      - run command result
# Example:
#     setenv kernel_location /boot/kernel
#     setenv kernel_address 0x45000000
#
#     setenv _name_ kernel
#     setenv _device_ ${boot_device}
#     run command_load_name
setenv command_load_name '
   env indirect _location_ ${_name_}_location;
   env indirect _address_ ${_name_}_address;
   run command_load;
'



# Command 'command_load_names' loads files to RAM.
# Next variables must be defined
#     _device_    - device where file is placed
#     _names_     - short file names list used for calling 'command_load_name'
# Next variables will be defined:
#     result      - run command result
# Example:
#     setenv kernel_location /boot/kernel
#     setenv kernel_address 0x45000000
#     setenv ramdisk_location /boot/ramdisk
#     setenv ramdisk_address 0x41000000
#     setenv fdt_location /boot/fdt
#     setenv fdt_address 0x40000000
#
#     setenv _names_ kernel ramdisk fdt
#     setenv _device_ ${boot_device}
#     run command_load_names
setenv command_load_names '
   for tmp_name in ${_names_}; do
      setenv _name_ ${tmp_name};
      run command_load_name;
   done
'



# Command 'command_print_data' prints all environment and some specified variables
setenv command_print_data '
   echo "@TDA: ---------------- Begin Data ----------------";
   printenv;
   echo "@TDA: fdt_address       = ${fdt_address}";
   echo "@TDA: scriptaddr        = ${scriptaddr}";
   echo "@TDA: xen_address       = ${xen_address}";
   echo "@TDA: kernel_address    = ${kernel_address}";
   echo "@TDA: ramdisk_address   = ${ramdisk_address}";
   echo "@TDA: abi_address       = ${abi_address}";
   echo "@TDA: bootargs          = ${bootargs}";
   echo "@TDA: loadaddr          = ${loadaddr}";
   echo "@TDA: fdtaddr           = ${fdtaddr}";

   echo "@TDA: fdt_size          = ${fdt_size}";
   echo "@TDA: xen_size          = ${xen_size}";
   echo "@TDA: kernel_size       = ${kernel_size}";
   echo "@TDA: ramdisk_size      = ${ramdisk_size}";
   echo "@TDA: abi_size          = ${abi_size}";
   echo "@TDA: ----------------- End Data -----------------";
'
